@page "/Editarlibros/{TituloLibro}"
@inject HttpClient http
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<h3>EditarLibros</h3>

<EditForm Model="@revistas" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="Titulo">Titulo</label>
        <InputText id="Titulo" @bind-Value="revistas.Titulo" class="form-control" />
        <ValidationMessage For="() => revistas.Titulo" />
    </div>
    <div class="form-group">
        <label for="Titulo">Autor</label>
        <InputText id="Autor" @bind-Value="revistas.Autor" class="form-control" />
        <ValidationMessage For="() => revistas.Autor" />
    </div>
    <div class="form-group">
        <label for="Titulo">Genero</label>
        <InputText id="Genero" @bind-Value="revistas.Genero" class="form-control" />
        <ValidationMessage For="() => revistas.Genero" />
    </div>
    <div class="form-group">
        <label for="AnioPublicacion">AnioPublicacion</label>
        <InputNumber id="AnioPublicacion" @bind-Value="revistas.AnioPublicacion" class="form-control" />
        <ValidationMessage For="() => revistas.AnioPublicacion" />
    </div>
    <div class="form-group">
        <label for="Volumen">Volumen</label>
        <InputNumber id="Volumen" @bind-Value="revistas.Volumen" class="form-control" />
        <ValidationMessage For="() => revistas.Volumen" />
    </div>
    <div class="form-group">
        <label for="NumeroEjemplar">NumeroEjemplar</label>
        <InputNumber id="NumeroEjemplar" @bind-Value="revistas.NumeroEjemplar" class="form-control" />
        <ValidationMessage For="() => revistas.NumeroEjemplar" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Guardar</button>
    </div>



</EditForm>

@code {

    [Parameter]
    public string TituloLibro { get; set; }

    private Revistas revistas = new Revistas();
    List<Revistas> revistaslista = new List<Revistas>();

    protected async Task Guardar()
    {
        await localStorage.SetItemAsync("revistaslista", revistaslista);
        NavigationManager.NavigateTo("/Ingreso-libros");
    }
    protected override async Task OnInitializedAsync()
    {
        revistaslista = await localStorage.GetItemAsync<List<Revistas>>("revistaslista");
        revistas = revistaslista.Find(c => c.Titulo == TituloLibro);
    }

}
